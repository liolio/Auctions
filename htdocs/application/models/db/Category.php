<?php

/**
 * Category
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Category extends BaseCategory
{

    /**
     * Returns array with ids of all parents.
     * 
     * @return array
     */
    public function getCategoryAllParentIds()
    {
        $parent = $this->Category;
        $parentIds = array();
        
        do {
            if (!is_null($parent->id))
                $parentIds[] = $parent->id;
            
            $parent = $parent->Category;
        } while (!is_null($parent->id));
        
        return $parentIds;
    }
    
    /**
     * Returns array with all children ids of category.
     * 
     * @return array
     */
    public function getCategoryAllChildrenIds()
    {
        $childrenIds = array();
        
        $this->_getChildrenIds($this, $childrenIds);
        
        return $childrenIds;
    }
    
    /**
     * Recurrently add children ids to childrenIds array parameter.
     * 
     * @param Category $category
     * @param array $childrenIds
     * @return array
     */
    private function _getChildrenIds(Category $category, array &$childrenIds)
    {
        $category->refresh(true);
        if (count($category->Categories) > 0)
        {
            foreach ($category->Categories as $childrenCategory)
            {
                $childrenIds[] = $childrenCategory->id;
                $this->_getChildrenIds($childrenCategory, $childrenIds);
            }
        }
        
        return $childrenIds;
    }
    
}