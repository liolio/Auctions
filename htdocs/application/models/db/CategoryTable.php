<?php

/**
 * CategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CategoryTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CategoryTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Category');
    }
    
    /**
     * Used to get main categories.
     * 
     * @return Doctrine_Collection
     */
    public function getMainCategories()
    {
        return $this->createQuery()
                ->addWhere("parent_category_id IS NULL")
                ->orderBy("name ASC")
                ->execute();
    }
    
    /**
     * Used to get list of categories to place in combo box.
     * 
     * @param type $withoutCategoryId
     * @return array id => category
     */
    public function getCategoriesList()
    {
        $categories = $this->getMainCategories();
        
        $categoriesArray = array();
        return $this->_addCategories($categories, $categoriesArray, null, false);
    }
    
    /**
     * Used to get list of categories to place in combo box.
     * 
     * @param type $withoutCategoryId
     * @return array id => prefix . name
     */
    public function getCategoriesListToList($withoutCategoryId = null)
    {
        $categories = $this->getMainCategories();
        
        $categoriesArray = array();
        $categoriesArray[ParamIdEnum::CATEGORY_MAIN_CATEGORY_PARENT_ID] = Helper::getTranslator()->translate('caption-category_main');
        
        $this->_addCategories($categories, $categoriesArray, $withoutCategoryId);
        
        return $categoriesArray;
    }
    
    /**
     * Used to add categories to categories array.
     * 
     * @param Doctrine_Collection $categories
     * @param array $categoriesArray
     * @param type $withoutCategoryId   Skips category with this ID and it's subcategories
     * @param type $addNameOnly         Adds name only, otherwise whole Doctrine_Recorde
     * @return type
     */
    private function _addCategories(Doctrine_Collection $categories, array &$categoriesArray, $withoutCategoryId, $addNameOnly = true)
    {
        $categoryPrefix = Helper::getTranslator()->translate('caption-category_list_prefix');
        foreach ($categories as $category)
        {
            if ($category->id !== $withoutCategoryId)
            {
                $category->name = $categoryPrefix . $category->name;
                $categoriesArray[$category->id] = $addNameOnly ? $category->name : $category;
                $this->_addSubCategories(
                    $categoriesArray, 
                    $category, 
                    $categoryPrefix . $categoryPrefix, 
                    $withoutCategoryId,
                    $addNameOnly
                );
            }
        }
        
        return $categoriesArray;
    }
    
    /**
     * Used to recurently add subcategories to categories array.
     * 
     * @param array $categoriesArray
     * @param Category $category
     * @param String $subCategoryPrefix
     * @param String $withoutCategoryId     Skips category with this ID and it's subcategories
     * @param Boolean $addNameOnly          Adds name only, otherwise whole Doctrine_Recorde
     */
    private function _addSubCategories(array &$categoriesArray, Category $category, $subCategoryPrefix, $withoutCategoryId, $addNameOnly = true)
    {
        if (count($category->Categories) > 0)
        {
            $categoryPrefix = Helper::getTranslator()->translate('caption-category_list_prefix');
            foreach ($this->_getCatogoriesForParentId($category->id) as $subCategory)
            {
                if ($subCategory->id !== $withoutCategoryId)
                {
                    $subCategory->name = $subCategoryPrefix . $subCategory->name;
                    $categoriesArray[$subCategory->id] = $addNameOnly ? $subCategory->name : $subCategory;
                    $this->_addSubCategories(
                        $categoriesArray, 
                        $subCategory, 
                        $subCategoryPrefix . $categoryPrefix, 
                        $withoutCategoryId,
                        $addNameOnly
                    );
                }
            }
        }
        
        return $categoriesArray;
    }
    
    /**
     * Returns collection with categories for given parent_category_id soreted by name ascending.
     * 
     * @param String $parentCategoryId
     * @return Doctrine_Collection
     */
    private function _getCatogoriesForParentId($parentCategoryId)
    {
        return $this->createQuery()
                ->addWhere("parent_category_id = ?", $parentCategoryId)
                ->orderBy("name ASC")
                ->execute();
    }
}